generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../libs/api-interfaces/src/generated/nestjs-dto"
  outputToNestJsResourceStructure = "true"
  exportRelationModifierClasses   = "true"
  reExport                        = "true"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = ""
  fileNamingStyle                 = "camel"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Quotation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  client    Client?  @relation(fields: [clientId], references: [id])
  clientId  String?  @db.ObjectId
  panels    Panel[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  name       String?
  address    String?
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  quotations Quotation[]
}

model Panel {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  quotedProducts QuotedProduct[]
  quotation      Quotation?      @relation(fields: [quotationId], references: [id])
  quotationId    String?         @db.ObjectId
}

model QuotedProduct {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  panel     Panel?   @relation(fields: [panelId], references: [id])
  panelId   String?  @db.ObjectId
  company   Company? @relation(fields: [companyId], references: [id])
  companyId String   @db.ObjectId
  unitQty   Int?
  feederQty Int?
  price     Float?
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  type      String?
}

model Product {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  description    String?
  name           String          @unique
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  quotedProducts QuotedProduct[]
}

model Company {
  name           String
  description    String?
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  quotedProducts QuotedProduct[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}
